
import numpy as np
import pandas as pd
import random




outlook = 'overcast,overcast,overcast,overcast,rainy,rainy,rainy,rainy,rainy,sunny,sunny,sunny,sunny,sunny'.split(',')
temp = 'hot,cool,mild,hot,mild,cool,cool,mild,mild,hot,hot,mild,cool,mild'.split(',')
humidity = 'high,normal,high,normal,high,normal,normal,normal,high,high,high,high,normal,normal'.split(',')
windy = 'FALSE,TRUE,TRUE,FALSE,FALSE,FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,FALSE,FALSE,TRUE'.split(',')
play = 'yes,yes,yes,yes,yes,yes,no,yes,no,no,no,no,yes,yes'.split(',')
dataset ={'outlook':outlook,'temp':temp,'humidity':humidity,'windy':windy,'play':play}
df = pd.DataFrame(dataset,columns=['outlook','temp','humidity','windy','play'])
   
	#input:pandas_dataframe
	#output:int/float/double/large
##def log(x, base):
##	log_b = 2
##	while x != int(round(base ** log_b)):
##    	log_b += 0.01
##    	print log_b
##	return int(round(log_b))

def get_entropy_of_dataset(df):
	entropy = 0    
        a=0
        b=0
        for i in df.play:
                if i =='yes':
                        a+=1
        else:
                b+=1
        p_yes=a/(a+b)
        p_no= b/(a+b)
        entropy=-p_yes*np.log2(p_yes) - p_no*np.log2(p_no)
        return entropy

	#input:pandas_dataframe,str   {i.e the column name ,ex: Temperature in the Play tennis dataset}
	#output:int/float/double/large
def get_entropy_of_attribute(df,attribute):
        entropy_of_attribute=0
        values=df[attribute].unique()
        for i in values:
                temp_df=df.loc[df[attribute]==i][df.columns[-1]]
                dict_val=dict(temp_df.value_counts())
                ent_val=0

        for k,v in dict_val.items():
                temp2=v/len(temp_df)
                ent_val+=-(len(temp_df)/len(df[df.columns[-1]])*temp2*np.log2(temp2))

        entropy_of_attribute+=ent_val
        print(entropy_of_attribute)
        return abs(entropy_of_attribute)



	#input:int/float/double/large,int/float/double/large
	#output:int/float/double/large
def get_information_gain(df,attribute):
        information_gain = 0
        information_gain = get_entropy_of_dataset(df) - get_entropy_of_attribute(df, attribute)
        return information_gain

	#input: pandas_dataframe
	#output: ({dict},'str')     
def get_selected_attribute(df):
   
        information_gains = {}
        selected_column = ""
        for attribute in df.columns:
                information_gains[attribute] = get_information_gain(df, attribute)
        selected_column = max(information_gains, key=information_gains.get) 
        return (information_gains,selected_column)



